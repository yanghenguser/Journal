package com.database.mybatis.po;

import java.util.ArrayList;
import java.util.List;

public class OrderinfoExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table orderinfo
	 * @mbg.generated  Tue Jun 20 22:36:47 CST 2017
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table orderinfo
	 * @mbg.generated  Tue Jun 20 22:36:47 CST 2017
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table orderinfo
	 * @mbg.generated  Tue Jun 20 22:36:47 CST 2017
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table orderinfo
	 * @mbg.generated  Tue Jun 20 22:36:47 CST 2017
	 */
	public OrderinfoExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table orderinfo
	 * @mbg.generated  Tue Jun 20 22:36:47 CST 2017
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table orderinfo
	 * @mbg.generated  Tue Jun 20 22:36:47 CST 2017
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table orderinfo
	 * @mbg.generated  Tue Jun 20 22:36:47 CST 2017
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table orderinfo
	 * @mbg.generated  Tue Jun 20 22:36:47 CST 2017
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table orderinfo
	 * @mbg.generated  Tue Jun 20 22:36:47 CST 2017
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table orderinfo
	 * @mbg.generated  Tue Jun 20 22:36:47 CST 2017
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table orderinfo
	 * @mbg.generated  Tue Jun 20 22:36:47 CST 2017
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table orderinfo
	 * @mbg.generated  Tue Jun 20 22:36:47 CST 2017
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table orderinfo
	 * @mbg.generated  Tue Jun 20 22:36:47 CST 2017
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table orderinfo
	 * @mbg.generated  Tue Jun 20 22:36:47 CST 2017
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table orderinfo
	 * @mbg.generated  Tue Jun 20 22:36:47 CST 2017
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andInfoidIsNull() {
			addCriterion("infoid is null");
			return (Criteria) this;
		}

		public Criteria andInfoidIsNotNull() {
			addCriterion("infoid is not null");
			return (Criteria) this;
		}

		public Criteria andInfoidEqualTo(Integer value) {
			addCriterion("infoid =", value, "infoid");
			return (Criteria) this;
		}

		public Criteria andInfoidNotEqualTo(Integer value) {
			addCriterion("infoid <>", value, "infoid");
			return (Criteria) this;
		}

		public Criteria andInfoidGreaterThan(Integer value) {
			addCriterion("infoid >", value, "infoid");
			return (Criteria) this;
		}

		public Criteria andInfoidGreaterThanOrEqualTo(Integer value) {
			addCriterion("infoid >=", value, "infoid");
			return (Criteria) this;
		}

		public Criteria andInfoidLessThan(Integer value) {
			addCriterion("infoid <", value, "infoid");
			return (Criteria) this;
		}

		public Criteria andInfoidLessThanOrEqualTo(Integer value) {
			addCriterion("infoid <=", value, "infoid");
			return (Criteria) this;
		}

		public Criteria andInfoidIn(List<Integer> values) {
			addCriterion("infoid in", values, "infoid");
			return (Criteria) this;
		}

		public Criteria andInfoidNotIn(List<Integer> values) {
			addCriterion("infoid not in", values, "infoid");
			return (Criteria) this;
		}

		public Criteria andInfoidBetween(Integer value1, Integer value2) {
			addCriterion("infoid between", value1, value2, "infoid");
			return (Criteria) this;
		}

		public Criteria andInfoidNotBetween(Integer value1, Integer value2) {
			addCriterion("infoid not between", value1, value2, "infoid");
			return (Criteria) this;
		}

		public Criteria andOrderidIsNull() {
			addCriterion("orderid is null");
			return (Criteria) this;
		}

		public Criteria andOrderidIsNotNull() {
			addCriterion("orderid is not null");
			return (Criteria) this;
		}

		public Criteria andOrderidEqualTo(String value) {
			addCriterion("orderid =", value, "orderid");
			return (Criteria) this;
		}

		public Criteria andOrderidNotEqualTo(String value) {
			addCriterion("orderid <>", value, "orderid");
			return (Criteria) this;
		}

		public Criteria andOrderidGreaterThan(String value) {
			addCriterion("orderid >", value, "orderid");
			return (Criteria) this;
		}

		public Criteria andOrderidGreaterThanOrEqualTo(String value) {
			addCriterion("orderid >=", value, "orderid");
			return (Criteria) this;
		}

		public Criteria andOrderidLessThan(String value) {
			addCriterion("orderid <", value, "orderid");
			return (Criteria) this;
		}

		public Criteria andOrderidLessThanOrEqualTo(String value) {
			addCriterion("orderid <=", value, "orderid");
			return (Criteria) this;
		}

		public Criteria andOrderidLike(String value) {
			addCriterion("orderid like", value, "orderid");
			return (Criteria) this;
		}

		public Criteria andOrderidNotLike(String value) {
			addCriterion("orderid not like", value, "orderid");
			return (Criteria) this;
		}

		public Criteria andOrderidIn(List<String> values) {
			addCriterion("orderid in", values, "orderid");
			return (Criteria) this;
		}

		public Criteria andOrderidNotIn(List<String> values) {
			addCriterion("orderid not in", values, "orderid");
			return (Criteria) this;
		}

		public Criteria andOrderidBetween(String value1, String value2) {
			addCriterion("orderid between", value1, value2, "orderid");
			return (Criteria) this;
		}

		public Criteria andOrderidNotBetween(String value1, String value2) {
			addCriterion("orderid not between", value1, value2, "orderid");
			return (Criteria) this;
		}

		public Criteria andNewsidIsNull() {
			addCriterion("newsid is null");
			return (Criteria) this;
		}

		public Criteria andNewsidIsNotNull() {
			addCriterion("newsid is not null");
			return (Criteria) this;
		}

		public Criteria andNewsidEqualTo(Integer value) {
			addCriterion("newsid =", value, "newsid");
			return (Criteria) this;
		}

		public Criteria andNewsidNotEqualTo(Integer value) {
			addCriterion("newsid <>", value, "newsid");
			return (Criteria) this;
		}

		public Criteria andNewsidGreaterThan(Integer value) {
			addCriterion("newsid >", value, "newsid");
			return (Criteria) this;
		}

		public Criteria andNewsidGreaterThanOrEqualTo(Integer value) {
			addCriterion("newsid >=", value, "newsid");
			return (Criteria) this;
		}

		public Criteria andNewsidLessThan(Integer value) {
			addCriterion("newsid <", value, "newsid");
			return (Criteria) this;
		}

		public Criteria andNewsidLessThanOrEqualTo(Integer value) {
			addCriterion("newsid <=", value, "newsid");
			return (Criteria) this;
		}

		public Criteria andNewsidIn(List<Integer> values) {
			addCriterion("newsid in", values, "newsid");
			return (Criteria) this;
		}

		public Criteria andNewsidNotIn(List<Integer> values) {
			addCriterion("newsid not in", values, "newsid");
			return (Criteria) this;
		}

		public Criteria andNewsidBetween(Integer value1, Integer value2) {
			addCriterion("newsid between", value1, value2, "newsid");
			return (Criteria) this;
		}

		public Criteria andNewsidNotBetween(Integer value1, Integer value2) {
			addCriterion("newsid not between", value1, value2, "newsid");
			return (Criteria) this;
		}

		public Criteria andOrdernumIsNull() {
			addCriterion("ordernum is null");
			return (Criteria) this;
		}

		public Criteria andOrdernumIsNotNull() {
			addCriterion("ordernum is not null");
			return (Criteria) this;
		}

		public Criteria andOrdernumEqualTo(Integer value) {
			addCriterion("ordernum =", value, "ordernum");
			return (Criteria) this;
		}

		public Criteria andOrdernumNotEqualTo(Integer value) {
			addCriterion("ordernum <>", value, "ordernum");
			return (Criteria) this;
		}

		public Criteria andOrdernumGreaterThan(Integer value) {
			addCriterion("ordernum >", value, "ordernum");
			return (Criteria) this;
		}

		public Criteria andOrdernumGreaterThanOrEqualTo(Integer value) {
			addCriterion("ordernum >=", value, "ordernum");
			return (Criteria) this;
		}

		public Criteria andOrdernumLessThan(Integer value) {
			addCriterion("ordernum <", value, "ordernum");
			return (Criteria) this;
		}

		public Criteria andOrdernumLessThanOrEqualTo(Integer value) {
			addCriterion("ordernum <=", value, "ordernum");
			return (Criteria) this;
		}

		public Criteria andOrdernumIn(List<Integer> values) {
			addCriterion("ordernum in", values, "ordernum");
			return (Criteria) this;
		}

		public Criteria andOrdernumNotIn(List<Integer> values) {
			addCriterion("ordernum not in", values, "ordernum");
			return (Criteria) this;
		}

		public Criteria andOrdernumBetween(Integer value1, Integer value2) {
			addCriterion("ordernum between", value1, value2, "ordernum");
			return (Criteria) this;
		}

		public Criteria andOrdernumNotBetween(Integer value1, Integer value2) {
			addCriterion("ordernum not between", value1, value2, "ordernum");
			return (Criteria) this;
		}

		public Criteria andOrdermouthIsNull() {
			addCriterion("ordermouth is null");
			return (Criteria) this;
		}

		public Criteria andOrdermouthIsNotNull() {
			addCriterion("ordermouth is not null");
			return (Criteria) this;
		}

		public Criteria andOrdermouthEqualTo(Integer value) {
			addCriterion("ordermouth =", value, "ordermouth");
			return (Criteria) this;
		}

		public Criteria andOrdermouthNotEqualTo(Integer value) {
			addCriterion("ordermouth <>", value, "ordermouth");
			return (Criteria) this;
		}

		public Criteria andOrdermouthGreaterThan(Integer value) {
			addCriterion("ordermouth >", value, "ordermouth");
			return (Criteria) this;
		}

		public Criteria andOrdermouthGreaterThanOrEqualTo(Integer value) {
			addCriterion("ordermouth >=", value, "ordermouth");
			return (Criteria) this;
		}

		public Criteria andOrdermouthLessThan(Integer value) {
			addCriterion("ordermouth <", value, "ordermouth");
			return (Criteria) this;
		}

		public Criteria andOrdermouthLessThanOrEqualTo(Integer value) {
			addCriterion("ordermouth <=", value, "ordermouth");
			return (Criteria) this;
		}

		public Criteria andOrdermouthIn(List<Integer> values) {
			addCriterion("ordermouth in", values, "ordermouth");
			return (Criteria) this;
		}

		public Criteria andOrdermouthNotIn(List<Integer> values) {
			addCriterion("ordermouth not in", values, "ordermouth");
			return (Criteria) this;
		}

		public Criteria andOrdermouthBetween(Integer value1, Integer value2) {
			addCriterion("ordermouth between", value1, value2, "ordermouth");
			return (Criteria) this;
		}

		public Criteria andOrdermouthNotBetween(Integer value1, Integer value2) {
			addCriterion("ordermouth not between", value1, value2, "ordermouth");
			return (Criteria) this;
		}

		public Criteria andPriceIsNull() {
			addCriterion("price is null");
			return (Criteria) this;
		}

		public Criteria andPriceIsNotNull() {
			addCriterion("price is not null");
			return (Criteria) this;
		}

		public Criteria andPriceEqualTo(Float value) {
			addCriterion("price =", value, "price");
			return (Criteria) this;
		}

		public Criteria andPriceNotEqualTo(Float value) {
			addCriterion("price <>", value, "price");
			return (Criteria) this;
		}

		public Criteria andPriceGreaterThan(Float value) {
			addCriterion("price >", value, "price");
			return (Criteria) this;
		}

		public Criteria andPriceGreaterThanOrEqualTo(Float value) {
			addCriterion("price >=", value, "price");
			return (Criteria) this;
		}

		public Criteria andPriceLessThan(Float value) {
			addCriterion("price <", value, "price");
			return (Criteria) this;
		}

		public Criteria andPriceLessThanOrEqualTo(Float value) {
			addCriterion("price <=", value, "price");
			return (Criteria) this;
		}

		public Criteria andPriceIn(List<Float> values) {
			addCriterion("price in", values, "price");
			return (Criteria) this;
		}

		public Criteria andPriceNotIn(List<Float> values) {
			addCriterion("price not in", values, "price");
			return (Criteria) this;
		}

		public Criteria andPriceBetween(Float value1, Float value2) {
			addCriterion("price between", value1, value2, "price");
			return (Criteria) this;
		}

		public Criteria andPriceNotBetween(Float value1, Float value2) {
			addCriterion("price not between", value1, value2, "price");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table orderinfo
	 * @mbg.generated  Tue Jun 20 22:36:47 CST 2017
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table orderinfo
     *
     * @mbg.generated do_not_delete_during_merge Sat Jun 17 23:12:21 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}